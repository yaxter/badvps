#!/bin/bash
clear
if [[ $1 == "on" ]]
then
	echo "ACTIVANDO DE BADVPN"
	echo

	wget -O /bin/badvpn-udpgw https://www.dropbox.com/s/z6hm10p3307un5m/badvpn-udpgw &>/dev/null
	chmod 777 /bin/badvpn-udpgw

	screen -dmS badvpn2 /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 10 
	echo "BADVPN ACTIVADA"
elif [[ $1 == "off" ]]
then
	echo "DESACTIVANDO DE BADVPN"
	echo
	kill -9 $(ps x | grep badvpn | grep -v grep | awk '{print $1'}) > /dev/null 2>&1
    killall badvpn-udpgw > /dev/null 2>&1
	rm /bin/badvpn-udpgw 2>/dev/null
    echo "BADVPN DESACTIVADA"

elif [[ $1 == "" ]]
then
	hhttp=""
	sssh=""

	cssh="$(service ssh status | grep -v grep | grep -ow running)"
	chttp="$(ps x | grep 81 | grep -v grep | grep -ow httpVps)"

	if [[ $cssh == "running" ]]
	then
		sssh="[ ON ]"
	else
		sssh="[ OFF ]"
	fi

	if [[ $chttp == "httpVps" ]]
	then
		hhttp="[ ON ]"
		
	else
		hhttp="[ OFF ]"
	fi


	bdvpn=""
	stunel=""
	pysocket=""
	comn=$(ps x | grep badvpn | grep -v grep | grep -ow badvpn2)  
	stun=$(ps x | grep stunnel4 | grep -v grep | grep -ow stunnel4)  
	pysock=$(ps x | grep sockpy | grep -v grep | grep -ow sockpy) 




	if [[ $pysock == "sockpy" ]]
	then
		pysocket="[ ON ]"
	else
		pysocket="[ OFF ]"
	fi

	if [[ $stun == "stunnel4" ]]
	then
		stunel="[ ON ]"
	else
		stunel="[ OFF ]"
	fi

	if [[ $comn == "badvpn2" ]]
	then
		bdvpn="[ ON ]"
	else
		bdvpn="[ OFF ]"
	fi

	echo "--------------------------------------------"
	echo "		SANET - VPS		"
	echo "--------------------------------------------"
	echo 
	ip=$(curl ifconfig.co 2>/dev/null)
	srv=$(cat /etc/hostname 2>/dev/null)
	echo "Servidor: $srv     IP: $ip"
	echo
	echo "--------------------------------------------"
	echo "		   PANEL		"
	echo "--------------------------------------------"
	echo "Servicios								  "
	echo
	echo "[*] HTTP			  $hhttp"
	echo "[*] SSH				  $sssh"
	echo
	echo "············································"
	echo
	echo "[1] Instalacion                  "
	echo "[2] Usuario"
	echo "[3] Socket			  $pysocket"
	echo "[4] SSL				  $stunel"
	echo "[5] BadVpn			  $bdvpn"
	echo "[0] Salir"
	echo
	read -p 'Opcion: ' inp
	if [[ $inp == "1" ]]
	then
		echo
		echo "Instalando componentes"
		echo
		echo
		apt-get install python2 -y
		apt-get install python3 -y
		echo
		echo "Instalacion completa"
		sleep 1
		clear
		echo "Iniciando servicios"
		echo 
		sleep 1
		echo "[*] Iniciando Http"
		screen -dmS httpVps python3 -m http.server --directory /var/www/html/ 81
		echo
		echo "Http iniciado"
		sleep 1
		echo
		echo "[*] Iniciando SSH"
		service ssh restart
		echo
		echo "SSH iniciado"
		sleep 1
		clear
		./badvps
	elif [[ $inp == "2" ]]
	then
		clear
		conex=$(ps aux|grep -v grep|grep sshd|grep -w "sanet"|grep -v root|wc -l)
		echo "--------------------------------------------"
		echo "		Usuario		"
		echo "--------------------------------------------"
		echo "Nombre		clave		conectados	"
		echo
		echo "sanet		sanet01		$conex	"
		echo
		echo "············································"
		echo
		echo "[1] Crear usuario"
		echo "[?] Volver"
		echo
		read -p 'Opcion: ' opc
		if [[ $opc == "1" ]]
		then
			echo
			read -p 'Nombre: ' nom
			useradd -M -s /bin/false $nom
			echo
			passwd $nom
			echo
			echo
			echo "Usuario $nom creado"
			sleep 2
			./badvps
		else
			./badvps
		fi
	elif [[ $inp == "3" ]]
	then
		if [[ $pysock == "sockpy" ]]
		then
			echo "Desactivando Socket"
			killall python2
			echo
			echo "Socket desactivado"
			sleep 1
			./badvps

		else
			echo "Activacion del Socket"
			echo
			read -p 'Banner: ' Banner
			echo
			read -p 'min-Banner: ' minBanner
			echo
			echo "Respuesta del Socket: $Banner $minBanner"
			echo
			echo
			screen -dmS sockpy python2 PDirect.py $Banner $minBanner
			echo "Socket activado"
			sleep 1
			./badvps
			

		fi
	elif [[ $inp == "4" ]]
	then
		if [[ $stun == "stunnel4" ]]
		then
			echo "DESACTIVANDO SSL"
			echo
			
			killall stunnel4> /dev/null 2>&1
			#rm /bin/badvpn-udpgw 2>/dev/null
			rm stunnel.crt 2>/dev/null
			rm stunel.key 2>/dev/null
			echo "SSL DESACTIVADO"
			sleep 2
			clear
			./badvps
		else
			echo "ACTIVANDO DE SSL"
			echo
			SSLPORT=443
			DPORT=22
			echo "instalando ssl"
			echo
			apt-get install stunnel4 -y > /dev/null 2>&1
			echo -e "client = no\n[SSL]\ncert = /etc/stunnel/stunnel.pem\naccept = ${SSLPORT}\nconnect = 127.0.0.1:${DPORT}" > /etc/stunnel/stunnel.conf
			openssl genrsa -out stunnel.key 2048 > /dev/null 2>&1
			openssl req -new -key stunnel.key -x509 -days 1000 -out stunnel.crt

			cat stunnel.crt stunnel.key > stunnel.pem 

			mv stunnel.pem /etc/stunnel/

			sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/stunnel4
			service stunnel4 restart > /dev/null 2>&1


			rm -rf /etc/ger-frm/stunnel.crt > /dev/null 2>&1
			rm -rf /etc/ger-frm/stunnel.key > /dev/null 2>&1
			rm -rf /root/stunnel.crt > /dev/null 2>&1
			rm -rf /root/stunnel.key > /dev/null 2>&1
			echo "SSL INSTALADO"
			sleep 2
			clear
			./badvps
		fi
	elif [[ $inp == "5" ]]
	then
		if [[ $comn == "badvpn2" ]]
		then
			echo "DESACTIVANDO DE BADVPN"
			echo
			kill -9 $(ps x | grep badvpn | grep -v grep | awk '{print $1'}) > /dev/null 2>&1
			killall badvpn-udpgw > /dev/null 2>&1
			rm /bin/badvpn-udpgw 2>/dev/null
			echo "BADVPN DESACTIVADA"
			sleep 2
			clear
			./badvps
		else
			echo "ACTIVANDO DE BADVPN"
			echo

			wget -O /bin/badvpn-udpgw https://www.dropbox.com/s/z6hm10p3307un5m/badvpn-udpgw &>/dev/null
			chmod 777 /bin/badvpn-udpgw

			screen -dmS badvpn2 /bin/badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 10 
			echo "BADVPN ACTIVADA"
			sleep 2
			clear
			./badvps
		fi
	elif [[ $inp == "0" ]]
	then 
		exit
	else
		echo "Desconocido"
		sleep 1
		clear
		./badvps
	fi
else 
	echo "Comando desconocido"
fi


